/*

This is the contemporary imagery module, which is part of the BVC MMM v4.0 library.
It is used to collect recent Landsat 8 imagery for the area of interest.

Last update: 29-04-2020

*/


exports.doc = 'The contemporary imagery module is used to collect contemporary images for the ROI.' +
    '\n The output is an image collection ready to be sorted into high and low tide groups. ' +
    '\n It includes .' +
    '\n' +
    '\n mang_buff(geom, mang):' +
    '\n   @param {ee.Geometry} geom: the coastline to be buffered' +
    '\n   @param {ee.Image} mange: the currently recognized mangrove extent' +
    '\n   @return {ee.Image} An image with the various buffered distances.' +
    '\n' +
    '\n graph:' +
    '\n   a graph of the various membership for each of the buffered distances.';


exports.histImagery = function(roi, hist_year1, hist_year2, cloudCoverLimit, month_1, month_2){

  // collect the LS4 imagery
  var col4 =  ee.ImageCollection("LANDSAT/LT04/C01/T1_SR")
    // filter to the path/row
    .filterBounds(roi) 
    // filter to the set cloud cover
    .filterMetadata('CLOUD_COVER', 'not_greater_than', cloudCoverLimit) 
    // filter for selected year range
    .filterDate( hist_year1 + '-01-01', hist_year1 + '-12-31')
    // filter for selected year range
    .filter(ee.Filter.calendarRange(month_1, month_2,'month'));
  // collect the LS5 imagery
  
  var col5 =  ee.ImageCollection("LANDSAT/LT05/C01/T1_SR")
    // filter to the path/row
    .filterBounds(roi)
    // filter to the set cloud cover
    .filterMetadata('CLOUD_COVER', 'not_greater_than', cloudCoverLimit)
    // filter for selected year range
    .filterDate( hist_year1 + '-01-01', hist_year1 + '-12-31')
    // filter for selected month range
    .filter(ee.Filter.calendarRange(month_1, month_2,'month'));
    
  // collect the LS7 imagery
  var col7 =  ee.ImageCollection("LANDSAT/LE07/C01/T1_SR")
    .filterBounds(roi)
    // filter to the set cloud cover
    .filterMetadata('CLOUD_COVER', 'not_greater_than', cloudCoverLimit)
    // filter for selected year range
    .filterDate( hist_year1 + '-01-01', hist_year1 + '-12-31')
    // filter for selected month range
    .filter(ee.Filter.calendarRange(month_1, month_2,'month'));

   //merge the collections 
   var merged = ee.ImageCollection(col7.merge(col5.merge(col4)));
   
   var masked = merged.map(function(img){
      // Bits 3 and 5 are cloud shadow and cloud, respectively.
      var cloudShadowBitMask = (1 << 3);
      var cloudsBitMask = (1 << 5);
      // Get the pixel QA band.
      var qa = img.select('pixel_qa');
      // Both flags should be set to zero, indicating clear conditions.
      var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
                   .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
    
      // Define a kernel.
      var kernel = ee.Kernel.gaussian({radius: 10});
    
      // Perform an erosion followed by a dilation, display.
      var opened = mask
               .focal_min({kernel: kernel, iterations: 2});

      return img.updateMask(opened);              
    });            
    
    return masked;   
  
};