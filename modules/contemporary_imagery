/*

This is the contemporary imagery module, which is part of the BVC MMM v4.0 library.
It is used to collect recent Landsat 8 imagery for the area of interest.

Last update: 29-04-2020

*/



exports.doc = 'The contemporary imagery module is used to collect contemporary images for the ROI.' +
    '\n The output is an image collection ready to be sorted into high and low tide groups. ' +
    '\n It includes .' +
    '\n'; 

exports.conImagery = function( roi, cont_year_1, cont_year_2, cloudCoverLimit, month_1, month_2){
  

    // load landsat 8 imagery
    var images =  ee.ImageCollection("LANDSAT/LC08/C01/T1_SR")
    // filter imagery for path/row tile
    .filterBounds(roi)
    // filter for cloud cover using the user specified threshold
    .filterMetadata('CLOUD_COVER', 'not_greater_than', cloudCoverLimit)
    // filter for year
    .filterDate( cont_year_1 + '-01-01', cont_year_2 + '-01-01')
    //filter the the months of interest
    .filter(ee.Filter.calendarRange(month_1, month_2,'month'));
    
    //RENAME BANDS
    images = images.select(['B2','B3','B4','B5','B6','B7','pixel_qa'],
                  ['B1','B2','B3','B4','B5','B7','pixel_qa']);
    
    var masked = images.map(function(img){
      // Bits 3 and 5 are cloud shadow and cloud, respectively.
      var cloudShadowBitMask = (1 << 3);
      var cloudsBitMask = (1 << 5);
      // Get the pixel QA band.
      var qa = img.select('pixel_qa');
      // Both flags should be set to zero, indicating clear conditions.
      var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
                   .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
    
      // Define a kernel.
      var kernel = ee.Kernel.gaussian({radius: 10});
    
      // Perform an erosion followed by a dilation, display.
      var opened = mask
               .focal_min({kernel: kernel, iterations: 2});

      return img.updateMask(opened);              
    });            
    
    return masked;              
};